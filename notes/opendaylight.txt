-----------------------------------------------------------------------------
ODL Tutorial - part 1 (OpenFlow)

Use the "Import" feature of VirtualBox to import the *.ova file from the tutorial website. I
recommend giving the VM 2-4 cpu's with 2-4 GB RAM per CPU.

IMPORTANT: Open up a CPU meter. You will need to monitor CPU usage to know when stupid karaf is
finished doing stuff. 

Set up env
  cp -n ~/.m2/settings.xml{,.orig} ; \
  wget -q -O - https://raw.githubusercontent.com/opendaylight/odlparent/master/settings.xml > ~/.m2/settings.xml

  sudo apt install -y wireshark mininet vim-gnome

cd ~/SDNHub_Opendaylight_Tutorial

***** IMPORTANT: skip doing "git pull --rebase" *****
mvn clean       ***** Do this first *****
mvn install -nsu  (No-Snapshot-Update - don't download definitions from nexus.iopendaylight.org)
  or:  mvn install -DskipTests -DskipIT -nsu

bin/karaf       ; wait 30-60 sec until CPU meter gets quiet again from being pegged
  feature:list          ; show all features
  feature:list -i       ; show only installed features
  feature:list        | grep netconf            ; can grep for output lines
  bundle:list -s      | grep sdnhub

  feature:install ...
  bundle:install ...

  log:display         | grep initialized
  log:set     DEBUG org.sdnhub
  log:set     DEBUG org.sdnhub.odl.tutorial
  log:tail

  shutdown -f
  system:shutdown or <ctrl-d> or logout       ; to shutdown
    ; If you don't get a clean shutdown, the CPU meter will stay busy for no reason and you'll need
    to reboot the VM

  from Gary (2016-7-18): 
    Alan you can see here, that the default bootstrap doesnâ€™t bring up the RESTconf server which is
    why nothing was working. You have to enable the features including:
    > feature:install sdnhub-tutorial-netconf-exercise

sudo mn --topo single,3 --mac --switch ovsk,protocols=OpenFlow13 --controller remote
  h1 ping h2
  s1 ovs-ofctl add-flow tcp:127.0.0.1:6634 -OOpenFlow13 priority=1,action=output:controller

-----------------------------------------------------------------------------
ODL Tutorial - part 2 (NETCONF)

***** DO NOT upgrade docker in the VM from the supplied version 1.8.1 *****
sudo docker pull sdnhub/netopeer

***** do not do the "git clone https://github.com/sdnhub/SDNHub_Opendaylight_Tutorial/ 
  we already have one in our home dir.  just use that one

cd SDNHub_Opendaylight_Tutorial/netconf-exercise
./spawn_router.sh router1       ; take note of IP returned
./spawn_router.sh router2       ; take note of IP returned

In another window:
  cd ~/SDNHub_Opendaylight_Tutorial
  mvn clean install -nsu 
  cd distribution/opendaylight-karaf/target/assembly
  bin/karaf     ***** wait for cpu to quiet down (30-60 sec)
  feature:install odl-netconf-connector-all     ***** wait for cpu to quiet down (30 sec)

In 1st window
  ./register_netconf_device.sh router1 172.17.0.63; sleep 5     ***** use IP printed earlier
  ./register_netconf_device.sh router2 172.17.0.64; sleep 5     ***** use IP printed earlier

Open a browser (firefox) in the VM. 
  for topology: localhost:8181/restconf/operational/network-topology:network-topology/topology/topology-netconf/

Execute in a shell in 1st window
  curl -u admin:admin -v -X PUT -H "Content-Type: application/xml" -d '
        <interfaces xmlns="urn:sdnhub:odl:tutorial:router">
          <id>eth0</id>
          <ip-address>10.10.1.1/24</ip-address>
        </interfaces>
  ' http://localhost:8181/restconf/config/network-topology:network-topology/topology/topology-netconf/node/router1/yang-ext:mount/router:interfaces/eth0

http://localhost:8181/restconf/config/network-topology:network-topology/topology/topology-netconf/node/router1/yang-ext:mount/

-----------------------------------------------------------------------------
REST interface:
  localhost:8181/restconf/operational/network-topology:network-topology/topology/topology-netconf


docker
  docker attach router1
  netopeer-cli
    connect localhost
      <passwd>
    status
    get-config
      running 

  
