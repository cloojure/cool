Docker Notes - Fedora 20 (2014-10-21)
  sudo apt install -y docker.io
  sudo systemctl start docker       # start docker
  sudo systemctl enable docker      # enable docker to start at boot

  alias dk="sudo docker"
  dk --help                         # general help
  dk <cmd> --help                   # help for <cmd>

  dk run -it ubuntu /bin/bash       # test if working (-i=interactive  -t=tty)
    ^p ^q   # detach w/o exit
  dk attach         <id>            # attach to a running container

  Commands:
    dk version
    dk run <image> <cmd> <args>     # run a job

    dk ps                           # list running containers
    dk ps -a                        # list ALL     containers

    dk logs         <id>            # cat logs
    dk logs -f      <id>            # "tail -f" logs
    dk top          <id>
    dk inspect      <id>            # detailed json output

    ID=$(dkru -d <image> <prog> <args>)        # daemon job
    dk stop         <id>
    dk start        <id>
    dk restart      <id>
    dk kill         <id>

    dk pause        <id>
    dk unpause      <id>

    dk rm           <id>                    # must be stopped to remove

Examples:
  docker run -it   ubuntu /bin/bash          # interactive shell
     ^p ^q                                   # detach from a running container
  docker run -itd  ubuntu /bin/bash          # interactive shell (detached)
  docker attach <ident>

  docker network ls
  docker network inspect bridge

----------------------------------------------------------------------------------------
Docker Machine Install (Ubuntu 15.10) from:  docs.docker.com/machine/install-machine/
  cd
  sudo su       # become root
    curl -L https://github.com/docker/machine/releases/download/v0.6.0/docker-machine-`uname -s`-`uname -m` > /usr/local/bin/docker-machine 
    chmod +x /usr/local/bin/docker-machine
    exit        # stop being root

----------------------------------------------------------------------------------------
Docker Machine commands
  docker-machine create --driver virtualbox host1
  docker-machine ls
  docker-machine inspect host1
  docker-machine inspect --format "{{.Driver.IPAddress}}" host1
  docker-machine ip host1
  docker-machine upgrade host3

  docker-machine ssh host1
  docker-machine ssh host1 "echo spot > dog.file"
  docker-machine scp host1:dog.file host2:dog.file
  docker-machine ssh host2 "cat dog.file"

  docker-machine stop host2
  docker-machine kill host3
  docker-machine start host2
  docker-machine rm host1 host2 host3

  docker-machine env machine1
  eval $(docker-machine env machine1)   # set machine1 as the active machine
    docker-machine active                           # show active machine
    docker-machine ls                               # list all machines (see col "active")
    docker pull dockerinaction/ch12_painted         # pull image into active machine

----------------------------------------------------------------------------------------
Dock Swarm commands

docker-machine create --driver virtualbox local
eval "$(docker-machine env local)"

token=$( docker run --rm swarm create )
echo $token

docker-machine create \
  --driver virtualbox \
  --swarm \
  --swarm-discovery token://${token} \
  --swarm-master \
  machine0-manager

docker-machine create \
  --driver virtualbox \
  --swarm \
  --swarm-discovery token://${token} \
  machine1

docker-machine create \
  --driver virtualbox \
  --swarm \
  --swarm-discovery token://${token} \
  machine2

# show current state:
docker-machine ls
  #=> NAME               ACTIVE   DRIVER       STATE     URL                         SWARM                       DOCKER    ERRORS
  #=> local              *        virtualbox   Running   tcp://192.168.99.100:2376                               v1.10.3   
  #=> machine0-manager   -        virtualbox   Running   tcp://192.168.99.101:2376   machine0-manager (master)   v1.10.3   
  #=> machine1           -        virtualbox   Running   tcp://192.168.99.102:2376   machine0-manager            v1.10.3   
  #=> machine2           -        virtualbox   Running   tcp://192.168.99.103:2376   machine0-manager            v1.10.3   

eval "$(docker-machine env --swarm machine0-manager)"       # config to use the swarm cluster
docker info     # reports on whole swarm, not just one docker daemon

# run a command on the swarm
docker run -t -d --name hello-swarm \
  dockerinaction/ch12_painted \
  Hello Swarm
docker logs hello-swarm         # see result

docker ps -a -f name=hello-swarm    # look at process status (ps); filter for "hello-swarm" container

docker pull dockerinaction/ch12_painted     # ensure each machine pulls the image

# cleanup the contains
docker-compose -f flock.yml kill
docker-compose -f flock.yml rm â€“vf

# labelled machine creation
docker-machine create -d virtualbox \
  --swarm --swarm-discovery token://${token}  --engine-label size=small  little-machine
docker-machine create -d virtualbox \
  --swarm --swarm-discovery token://${token}  --engine-label size=xxl    big-machine

# run a constrained container
docker run -d  -e constraint:size==xxl  -m 4G --cpu-shares 512 postgres

# cleanup the machines
docker-machine rm -f local machine0-manager machine1 machine2 

# Disable docker-machine, so local docker daemon can be used again
docker-machine-disable      # alias
  alias docker-machine-disable=' DOCKER_MACHINE_IP="" ; DOCKER_TLS_VERIFY="" ; DOCKER_HOST="" ; DOCKER_CERT_PATH="" ; DOCKER_MACHINE_NAME="" '

