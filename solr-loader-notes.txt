Use Jenkins to deploy either:
  solr
  htapi-loader

Mostly just redeploy loader. If change schema, also need to re-deploy solr

MySQL on devtest
  >  mysql -u v2arch -p configuration
  password:  munbah1

  mysql> select siteName from sites where siteID=350;

      siteID  siteName
      149     Proactiv
      154     Sprint        # big (not every day in dev cluster)
      316     SFR
      319     TotalGym
      350     SFR Care

run ~/cool/tceast.bash

data goes into dir like:  /home/athompson/tcdata/usr/etl/htapi_logs/20151123_0120/transcript/350_190_1448331469687
following instructions from http://confluence.touchcommerce.com/display/dev/Loader+Deploy+Instructions
***** must change solr.host to IP from ifconfig["eth0"]
***** must change solr.port to 80 (non-std port number)

  HTAPI.properties file looks like:
    useLocal = true
    greedy = true
    engagements.dir = /home/athompson/tcdata/usr/etl/htapi_logs/20151123_0120/transcript/

    num.engagements.to.load = 100
    batch.size = 100

    queue.size = 20
    thread.count = 5

    solr.host = 172.26.132.5
    solr.port = 80
    index.path = /solr

    hadoop.core.site.file = ./core-site.xml

    load.time.dir = ./
    load.time.file = load-times.txt

To restart solr on devtest
  sudo service solr restart  (start/stop/restart/status)
  view solr admin console: http://agvdevtest26.touchcommerce.com/solr  (port 80 !)

-----------------------------------------------------------------------------
Solr/Jenkins Notes:

We use Jenkins (why?) to deploy solr & loader
  go to jenkins: http://172.26.124.44:8080/
  you must Login at this point! (username/password)
  go to the HTAPI tab
  click "DeploySolr (keep Data Index)" link
  click "Build with Parameters" link
    Add in the hostname (eg agvdevtest26.touchcommerce.com)
    submit the job
  watch in the "Build History" panel as the job is processed (~1 minute)
    you can click on the link (eg #113-B-HTAPE-master-to-agvdevtest26.touchcommerce.com) to see job output
      click on "Console Output"

Note that Solr is a flat key-value store.  All values must be primitive types (e.g. string, integer, float).
  Values may be "multiValued", so that a list of primitives is permitted, like
    List<String>
    List<Integer>
    List<Float>

Solr Nested (Child) Documents (also see "Block Join Query")
  Sub documents (e.g. recursion or nesting of documents) IS NOT PERMITTED (at least in Solr 4.7)
  Sub documents are allowed (only ONE nesting level!) in current Solr 5.3.  Load as JSON:
      [
        {
          "id": "1",
          "title": "Solr adds block join support",
          "content_type": "parentDocument",
          "_childDocuments_": [
            {
              "id": "2",
              "comments": "SolrCloud supports it too!"
            }
          ]
        },
        {
          "id": "3",
          "title": "New Lucene and Solr release is out",
          "content_type": "parentDocument",
          "_childDocuments_": [
            {
              "id": "4",
              "comments": "Lots of new features"
            }
          ]
        }
      ]
      Note it is REQUIRED TO USE THE SPECIAL KEY:  "_childDocuments_"

  Queries for nested documents are described here:
    https://cwiki.apache.org/confluence/display/solr/Other+Parsers#OtherParsers-BlockJoinQueryParsers

