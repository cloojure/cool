******************************************************************************************
; Online resources:
  http://www.postgresql.org/docs/9.3/static/index.html
  http://www.postgresqltutorial.com/
  http://www.pgadmin.org/
******************************************************************************************

shell:
  pg_ctl    initdb  -D /var/postgresql    ; init postgres global storage area
  postgres          -D /var/postgresql    ; start the postgres server (blocking)
    ^-Use this for Clojure Cookbook testing

  createuser <user-name>    ; user-name aka "rolename" in docs
  dropeuser  <user-name>
  createdb   <db-name>
  createdb   -O <owner-name> <db-name>
  dropedb    <db-name>

psql <dbname>   - start psql, attach to <dbname> (defaults to unix username)
  \l[+]                         - list databases (+ => extra info)
  \du[+]                        - list users/roles (+ => extra info)
  \d                            - list tables, views, sequences
  \d  [<name>]                  - describe tables, views, sequences
  \h                            - help
  \q                            - quit (or CRTL-D)
  CREATE USER <name>;       - synonym for "CREATE ROLE <name> LOGIN;"
  CREATE USER <name> SUPERUSER LOGIN;
  DROP   USER <name>;

  CREATE DATABASE <db-name>;
  CREATE DATABASE <db-name> OWNER <user-name>;    - user-name aka "rolename" in docs
  DROP   DATABASE <db-name>;

Files (Fedora):
  /var/lib/pgsql
  /var/lib/pgsql/9.2/data/pg_hba.conf
Files (Mac OSX):
  /usr/local/bin/psql
  /usr/local/Cellar/postgresql/9.3.3/bin/psql
  /usr/local/var/postgres/pg_hba.conf

Notes:
  Since typing "psql" at the command defaults to "psql <unix-username>", it will fail if
  a database named <unix-username> doesn't exist.  To prevent this, it may be convenient
  to make an empty, default db for each user even if it is never used.

Fedora notes:  
  See:  https://wiki.postgresql.org/wiki/YUM_Installation
        https://wiki.postgresql.org/wiki/First_steps

  Change auth method from "ident" to "trust" in pg_hba.conf (/var/lib/psql/...)
    -- I had 2 of them!
    -- looks like /var/lib/pgsql/9.3 is the correct one (fedora 20, postgres 9.3, 2014/7)
    -- log file:  /var/lib/pgsql/9.3/data/pg_log/postgresql-Fri.log   (etc)

  After creation/init:
  > sudo su - postgres
  > psql                                        -- implicitly uses DB=postgres
  postgres=# CREATE USER alan SUPERUSER LOGIN;
  postgres=# \q                                 -- exit
  > exit                                        -- logout from user postgres
  > psql -d postgres                            -- must specify an existing DB
  postgres=# \l                                 -- list databases
  postgres=# \da                                -- list schema info
  postgres=# \d                                 -- list tables
  postgres=# postgres=# CREATE DATABASE alan;            -- easiest to create dummy DB for all users.
  postgres=# \l                                 -- DB alan now exists
  postgres=# \q                                 -- quit

******************************************************************************************
; Trillian staging
> psql  --host trillian-sandbox.ce2yqgtookax.us-east-1.rds.amazonaws.com \
        --port 10003 --username trillian  trillian_staging

  => \d                 - describe all tables
  => \d sync_jobs       - describe table sync_jobs
  => select id,job_id,latest_file,hostname from sync_jobs;  
                        - print 4 cols from sync_jobs

  - print rows for the 5 largest ids
  => select id,job_id,latest_file,hostname 
        from sync_jobs order by id desc limit 5;

  => select max(id) from sync_jobs;     - print largest value in id column
  => select id,job_id,latest_file,hostname 
        from sync_jobs where  id=1132;
                        - print just the row specified

  - Using a sub-query in the where clause instead of the 2-step method above
  => select id,job_id,latest_file,hostname from sync_jobs 
        where id=(select max(id) from sync_jobs);

  => begin;             - begin transaction block
  => update sync_jobs set hostname='dummy-host' where id=1132;  - make change to db
  => { commit;          - either commit the change to the db
  => or
  =>   rollback; }      - or rollback (discard) the change

******************************************************************************************
Notes:
  Although SQL is case insensitive, the commands "CREATE USER..." & "CREATE ROLE..."
  appear to be *postgres* commands (i.e. NOT SQL), and therefore DO SEEM to be case
  sensitive.
******************************************************************************************


Tables:
--------------------------------------------------------------------------------
  CREATE TABLE weather (
      city            varchar(80),
      temp_lo         int,           -- low temperature
      temp_hi         int,           -- high temperature
      prcp            real,          -- precipitation
      date            date
  );

  CREATE TABLE cities (
      name            varchar(80),
      location        point
  );

  DROP TABLE tablename;   ***** permanent deletion! *****

  INSERT INTO weather (city, temp_lo, temp_hi, prcp, date)
      VALUES ('San Francisco', 43, 57, 0.0, '1994-11-29');

  SELECT * FROM weather;                - star "*" means all columns
  SELECT city, temp_lo, temp_hi, prcp, date FROM weather;       - list col's wanted

  SELECT * FROM weather
    WHERE city = 'San Francisco' AND prcp > 0.0;

  SELECT * FROM weather
    ORDER BY city;
  SELECT * FROM weather
    ORDER BY city, temp_lo;

  SELECT DISTINCT city
    FROM weather;

  SELECT city, temp_lo, temp_hi, prcp, date, location
    FROM weather, cities
    WHERE weather.city = city.name;

  SELECT W1.city, W1.temp_lo AS low, W1.temp_hi AS high,
         W2.city, W2.temp_lo AS low, W2.temp_hi AS high
    FROM weather W1, weather W2
    WHERE W1.temp_lo < W2.temp_lo
    AND   W1.temp_hi > W2.temp_hi;

         city      | low | high |     city      | low | high
    ---------------+-----+------+---------------+-----+------
     San Francisco |  43 |   57 | San Francisco |  46 |   50
     Hayward       |  37 |   54 | San Francisco |  46 |   50
