--recurse=yes
--tag-relative=yes
--exclude=.git

--langdef=Clojure
--langmap=Clojure:.clj.cljc.cljx.cljs
--regex-clojure=/\([ \t]*create-ns[ \t]+([-a-zA-Z0-9*+<>!_:\/.?]+)/\1/n,namespace/
--regex-clojure=/\([ \t]*def[ \t]+((\^[-a-zA-Z0-9*+<>!_:\/.?]+)[ \t]+)?([-a-zA-Z0-9*+<>!_:\/.?]+)/\3/d,definition/
--regex-clojure=/\([ \t]*defn-?[ \t]+((\^[-a-zA-Z0-9*+<>!_:\/.?]+)[ \t]+)?([-a-zA-Z0-9*+<>!_:\/.?]+)/\3/f,function/
--regex-clojure=/\([ \t]*defmacro[ \t]+([-a-zA-Z0-9*+<>!_:\/.?]+)/\1/m,macro/
--regex-clojure=/\([ \t]*definline[ \t]+([-a-zA-Z0-9*+<>!_:\/.?]+)/\1/i,inline/
--regex-clojure=/\([ \t]*defmulti[ \t]+([-a-zA-Z0-9*+<>!_:\/.?]+)/\1/a,multimethod definition/
--regex-clojure=/\([ \t]*defmethod[ \t]+([-a-zA-Z0-9*+<>!_:\/.?]+)/\1/b,multimethod instance/
--regex-clojure=/\([ \t]*defonce[ \t]+([-a-zA-Z0-9*+<>!_:\/.?]+)/\1/c,definition (once)/
--regex-clojure=/\([ \t]*defstruct[ \t]+([-a-zA-Z0-9*+<>!_:\/.?]+)/\1/s,struct/
--regex-clojure=/\([ \t]*intern[ \t]+([-a-zA-Z0-9*+<>!_:\/.?]+)/\1/v,intern/
--regex-clojure=/\([ \t]*ns[ \t]+([-a-zA-Z0-9*+<>!_:\/.?]+)/\1/n,namespace/

--langdef=Groovy
--langmap=Groovy:.groovy
--regex-groovy=/^[ \t]*[(private|public|protected) ( \t)]*[A-Za-z0-9_<>]+[ \t]+([A-Za-z0-9_]+)[ \t]*\(.*\)[ \t]*\{/\1/f,function,functions/
--regex-groovy=/^[ \t]*def[ \t]+([A-Za-z0-9_]+)[ \t]*\=[ \t]*\{/\1/f,function,functions/
--regex-groovy=/^[ \t]*private def[ \t]+([A-Za-z0-9_]+)[ \t]*/\1/v,private,private variables/
--regex-groovy=/^[ \t]*def[ \t]+([A-Za-z0-9_]+)[ \t]*/\1/u,public,public variables/
--regex-groovy=/^[ \t]*[abstract ( \t)]*[(private|public) ( \t)]*class[ \t]+([A-Za-z0-9_]+)[ \t]*/\1/c,class,classes/
--regex-groovy=/^[ \t]*[abstract ( \t)]*[(private|public) ( \t)]*enum[ \t]+([A-Za-z0-9_]+)[ \t]*/\1/c,class,classes/
